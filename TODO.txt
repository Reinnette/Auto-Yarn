- Adjust cost and YPS values
- Visuals
	- Buttons
	- Background
	- Yarn
	- Upgrades
	- Upgrade Borders
	- Upgrade Images
Idle Music
Yarn sounds
Add Ascension
	- Ascension will reset all clicker progress and coins but grant the ability to earn Cores
			-Cores: Special currency gained by defeating a certain number of yarn getting harder to get each time
Add Ascension Upgrades
	- Better click ps
	- 
	- Upgrades to Cats that increase YPS per cat, start with x Cats, reduce cost
	- Upgrades to Dragons that increase YPS per Dragons, start with x Dragons, reduce cost
Add Ancient Ascension
	- Another version of Ascension that will wipe all Ascension and upgrades but grant Ancient Blessing in return
Add Ancient Upgrades
	- Reduce Ascension Cost
	- Increase yps
	- Increase idle rewards
Add Synergy Upgrades
Add research Upgrades
Add Mini Games
Add Special events
	- Kitten Frenzy: In this mode kittens have gone into a mad frenzy
			- Cats generate more 2.75x more but hit every 2 seconds
	- Draconic Rein: In this mode the dragons took control and are burning everything
			- Every 100 dragons counts to 1 elder dragon
				- Elder Dragons are a hiden clicker that gives x50 Dragon YPS
	- Draconic Neko Overloard: Dragons and Cats have merged together
			- Requires Kitten Frenzy and Draconic Rein active at the same time
			- Every 50 Dragons and 50 Cats equals one Elder Cat Dragon
				- Elder Cat Dragons are hidden clickers that give (Cat YPS + Dragon YPS) * 125 but generate every 2 seconds
	- Dimensional Rift: The space and time of the basket rips as Boss Yarn emerge.
	- Fairys Grace: 
	- Cat Fae: In this mode angelic cats emerge
		- requires Kitten Frenzy and Fairys Grace to be in effect
		- All other clickers get +2% bonus YPS
Add Bosses
	- Bosses are yarn whose health needs to decrease inorder to unravel
	- Each boss has a different effect and amount rewared
	- Health is based off of current YPS


#How to store large numbers
string coins = X #max = 63m chars
 - int maxes at 2^63 - 1
 - segments = coins.length / 63
 - for count = 0; count > segments; count++{ coins.split(count * 63)}
